"use strict";

const { NET_INTERFACE, APP_PORT } = process.env;
const app = require("../app");
const http = require("http");
const logger = require("../libs/logger");

// Normalize port
function normalizePort(val) {
  const port = parseInt(val, 10);
  if (isNaN(port)) return val;
  if (port >= 0) return port;
  return false;
}

const port = normalizePort(APP_PORT || 4000);
const host = NET_INTERFACE || "127.0.0.1";

// Create HTTP server
const server = http.createServer(app);

// Start server
server.listen(port, host, () => {
  logger.info(`Server running at http://${host}:${port}`);
});

// Handle server errors
function onError(error) {
  if (error.syscall !== "listen") throw error;

  const bind = typeof port === "string" ? "Pipe " + port : "Port " + port;

  switch (error.code) {
    case "EACCES":
      logger.error(`${bind} requires elevated privileges`);
      process.exit(1);
      break;
    case "EADDRINUSE":
      logger.error(`${bind} is already in use`);
      process.exit(1);
      break;
    default:
      throw error;
  }
}

server.on("error", onError);
